// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IoK8sAPIAuditregistrationV1alpha1Webhook Webhook holds the configuration of the webhook
//
// swagger:model io.k8s.api.auditregistration.v1alpha1.Webhook
type IoK8sAPIAuditregistrationV1alpha1Webhook struct {

	// ClientConfig holds the connection parameters for the webhook required
	// Required: true
	ClientConfig *IoK8sAPIAuditregistrationV1alpha1WebhookClientConfig `json:"clientConfig"`

	// Throttle holds the options for throttling the webhook
	Throttle *IoK8sAPIAuditregistrationV1alpha1WebhookThrottleConfig `json:"throttle,omitempty"`
}

// Validate validates this io k8s api auditregistration v1alpha1 webhook
func (m *IoK8sAPIAuditregistrationV1alpha1Webhook) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThrottle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IoK8sAPIAuditregistrationV1alpha1Webhook) validateClientConfig(formats strfmt.Registry) error {

	if err := validate.Required("clientConfig", "body", m.ClientConfig); err != nil {
		return err
	}

	if m.ClientConfig != nil {
		if err := m.ClientConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("clientConfig")
			}
			return err
		}
	}

	return nil
}

func (m *IoK8sAPIAuditregistrationV1alpha1Webhook) validateThrottle(formats strfmt.Registry) error {

	if swag.IsZero(m.Throttle) { // not required
		return nil
	}

	if m.Throttle != nil {
		if err := m.Throttle.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("throttle")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IoK8sAPIAuditregistrationV1alpha1Webhook) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IoK8sAPIAuditregistrationV1alpha1Webhook) UnmarshalBinary(b []byte) error {
	var res IoK8sAPIAuditregistrationV1alpha1Webhook
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
