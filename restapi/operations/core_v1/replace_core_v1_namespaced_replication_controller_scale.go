// Code generated by go-swagger; DO NOT EDIT.

package core_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ReplaceCoreV1NamespacedReplicationControllerScaleHandlerFunc turns a function with the right signature into a replace core v1 namespaced replication controller scale handler
type ReplaceCoreV1NamespacedReplicationControllerScaleHandlerFunc func(ReplaceCoreV1NamespacedReplicationControllerScaleParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn ReplaceCoreV1NamespacedReplicationControllerScaleHandlerFunc) Handle(params ReplaceCoreV1NamespacedReplicationControllerScaleParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// ReplaceCoreV1NamespacedReplicationControllerScaleHandler interface for that can handle valid replace core v1 namespaced replication controller scale params
type ReplaceCoreV1NamespacedReplicationControllerScaleHandler interface {
	Handle(ReplaceCoreV1NamespacedReplicationControllerScaleParams, interface{}) middleware.Responder
}

// NewReplaceCoreV1NamespacedReplicationControllerScale creates a new http.Handler for the replace core v1 namespaced replication controller scale operation
func NewReplaceCoreV1NamespacedReplicationControllerScale(ctx *middleware.Context, handler ReplaceCoreV1NamespacedReplicationControllerScaleHandler) *ReplaceCoreV1NamespacedReplicationControllerScale {
	return &ReplaceCoreV1NamespacedReplicationControllerScale{Context: ctx, Handler: handler}
}

/*ReplaceCoreV1NamespacedReplicationControllerScale swagger:route PUT /api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale core_v1 replaceCoreV1NamespacedReplicationControllerScale

replace scale of the specified ReplicationController

*/
type ReplaceCoreV1NamespacedReplicationControllerScale struct {
	Context *middleware.Context
	Handler ReplaceCoreV1NamespacedReplicationControllerScaleHandler
}

func (o *ReplaceCoreV1NamespacedReplicationControllerScale) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewReplaceCoreV1NamespacedReplicationControllerScaleParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
