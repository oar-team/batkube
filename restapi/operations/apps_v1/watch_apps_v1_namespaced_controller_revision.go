// Code generated by go-swagger; DO NOT EDIT.

package apps_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// WatchAppsV1NamespacedControllerRevisionHandlerFunc turns a function with the right signature into a watch apps v1 namespaced controller revision handler
type WatchAppsV1NamespacedControllerRevisionHandlerFunc func(WatchAppsV1NamespacedControllerRevisionParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn WatchAppsV1NamespacedControllerRevisionHandlerFunc) Handle(params WatchAppsV1NamespacedControllerRevisionParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// WatchAppsV1NamespacedControllerRevisionHandler interface for that can handle valid watch apps v1 namespaced controller revision params
type WatchAppsV1NamespacedControllerRevisionHandler interface {
	Handle(WatchAppsV1NamespacedControllerRevisionParams, interface{}) middleware.Responder
}

// NewWatchAppsV1NamespacedControllerRevision creates a new http.Handler for the watch apps v1 namespaced controller revision operation
func NewWatchAppsV1NamespacedControllerRevision(ctx *middleware.Context, handler WatchAppsV1NamespacedControllerRevisionHandler) *WatchAppsV1NamespacedControllerRevision {
	return &WatchAppsV1NamespacedControllerRevision{Context: ctx, Handler: handler}
}

/*WatchAppsV1NamespacedControllerRevision swagger:route GET /apis/apps/v1/watch/namespaces/{namespace}/controllerrevisions/{name} apps_v1 watchAppsV1NamespacedControllerRevision

watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter.

*/
type WatchAppsV1NamespacedControllerRevision struct {
	Context *middleware.Context
	Handler WatchAppsV1NamespacedControllerRevisionHandler
}

func (o *WatchAppsV1NamespacedControllerRevision) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewWatchAppsV1NamespacedControllerRevisionParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
