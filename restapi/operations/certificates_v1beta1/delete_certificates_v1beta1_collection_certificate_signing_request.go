// Code generated by go-swagger; DO NOT EDIT.

package certificates_v1beta1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandlerFunc turns a function with the right signature into a delete certificates v1beta1 collection certificate signing request handler
type DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandlerFunc func(DeleteCertificatesV1beta1CollectionCertificateSigningRequestParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandlerFunc) Handle(params DeleteCertificatesV1beta1CollectionCertificateSigningRequestParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandler interface for that can handle valid delete certificates v1beta1 collection certificate signing request params
type DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandler interface {
	Handle(DeleteCertificatesV1beta1CollectionCertificateSigningRequestParams, interface{}) middleware.Responder
}

// NewDeleteCertificatesV1beta1CollectionCertificateSigningRequest creates a new http.Handler for the delete certificates v1beta1 collection certificate signing request operation
func NewDeleteCertificatesV1beta1CollectionCertificateSigningRequest(ctx *middleware.Context, handler DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandler) *DeleteCertificatesV1beta1CollectionCertificateSigningRequest {
	return &DeleteCertificatesV1beta1CollectionCertificateSigningRequest{Context: ctx, Handler: handler}
}

/*DeleteCertificatesV1beta1CollectionCertificateSigningRequest swagger:route DELETE /apis/certificates.k8s.io/v1beta1/certificatesigningrequests certificates_v1beta1 deleteCertificatesV1beta1CollectionCertificateSigningRequest

delete collection of CertificateSigningRequest

*/
type DeleteCertificatesV1beta1CollectionCertificateSigningRequest struct {
	Context *middleware.Context
	Handler DeleteCertificatesV1beta1CollectionCertificateSigningRequestHandler
}

func (o *DeleteCertificatesV1beta1CollectionCertificateSigningRequest) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewDeleteCertificatesV1beta1CollectionCertificateSigningRequestParams()

	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		r = aCtx
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
